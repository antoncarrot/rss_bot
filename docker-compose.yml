services:
  miniflux:
    restart: unless-stopped
    image: miniflux/miniflux:2.0.49-distroless
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://miniflux:secret@db/miniflux?sslmode=disable
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME=${MINIFLUX_USER}
      - ADMIN_PASSWORD=${MINIFLUX_PSWD}
      - DISABLE_HTTP_SERVICE=${MINIFLUX_DISABLE_HTTP:-0}

  db:
    restart: unless-stopped
    image: postgres:15.4-alpine3.17
    environment:
      - POSTGRES_USER=miniflux
      - POSTGRES_PASSWORD=secret
    volumes:
      - miniflux-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 10s
      start_period: 30s

  app:
    restart: unless-stopped
    build:
      context: "."
    environment:
      APP_DEBUG: ${APP_DEBUG}
      TG_BOT_TOKEN: ${TG_BOT_TOKEN}
      TG_BOT_ADMIN_ID: ${TG_BOT_ADMIN_ID}
      TG_BOT_PRIVATE_MODE: ${TG_BOT_PRIVATE_MODE:-1}
      MINIFLUX_API_URL: ${MINIFLUX_API_URL:-http://miniflux:8080}
      MINIFLUX_USER: ${MINIFLUX_USER}
      MINIFLUX_PSWD: ${MINIFLUX_PSWD}
      MINIFLUX_API_TOKEN: ${MINIFLUX_API_TOKEN}

volumes:
  miniflux-db:
